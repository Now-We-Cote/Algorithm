// 동전 교환(냅색 알고리즘)

// 문제 - 다음과 같이 여러 단위의 동전들이 주어져 있을때 거스름돈을 가장 적은 수의 동전으로 교환 해주려면 어떻게 주면 되는가?
// 각 단위의 동전은 무한정 쓸 수 있다.

// 입력 - 첫 번째 줄에는 동전의 종류개수 N(1<=N<=12)이 주어진다.
// 두 번째 줄에는 N개의 동전의 종 류가 주어지고, 그 다음줄에 거슬러 줄 금액 M(1<=M<=500)이 주어진다.
//각 동전의 종류는 100원을 넘지 않는다.

// 출력 - 첫 번째 줄에 거슬러 줄 동전의 최소개수를 출력한다.

// 입력 예시 - 3, [1, 2, 5], 15

// 출력 예시 - 3

{
  const solution = (N, coins, M) => {
    const dy = new Array(M + 1).fill(1000);
    dy[0] = 0;

    for (let i = 0; i < coins.length; i++) {
      for (let j = coins[i]; j <= M; j++) {
        dy[j] = Math.min(dy[j], dy[j - coins[i]] + 1);
      }
    }

    return dy[M];
  };
}
