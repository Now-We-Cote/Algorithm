// 미로탐색

// 문제 - 7*7 격자판 미로를 탈출하는 경로의 가지수를 출력하는 프로그램을 작성하세요.
// 출발점은 격 자의 (1, 1) 좌표이고, 탈출 도착점은 (7, 7)좌표이다.
// 격자판의 1은 벽이고, 0은 통로이다. 격 자판의 움직임은 상하좌우로만 움직인다. 미로가 다음과 같다면
// 위의 지도에서 출발점에서 도착점까지 갈 수 있는 방법의 수는 8가지이다.

// 입력 - 7*7 격자판의 정보가 주어집니다.

// 출력 - 첫 번째 줄에 경로의 가지수를 출력한다.

// 입력 예제 - [[0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0],[0, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 1],[1, 1, 0, 1, 1, 0, 0],[1, 0, 0, 0, 0, 0, 0]]

// 출력 예제 - 8

const array = [
  [0, 0, 0, 0, 0, 0, 0],
  [0, 1, 1, 1, 1, 1, 0],
  [0, 0, 0, 1, 0, 0, 0],
  [1, 1, 0, 1, 0, 1, 1],
  [1, 1, 0, 0, 0, 0, 1],
  [1, 1, 0, 1, 1, 0, 0],
  [1, 0, 0, 0, 0, 0, 0],
];

{
  const solution = (map) => {
    let count = 0;
    const X = [-1, 0, 1, 0];
    const Y = [0, 1, 0, -1];

    const DFS = (x, y) => {
      if (x === 6 && y === 6) {
        count++;
      } else {
        for (let i = 0; i < 4; i++) {
          let nextX = x + X[i];
          let nextY = y + Y[i];
          if (
            nextX >= 0 &&
            nextX <= 6 &&
            nextY >= 0 &&
            nextY <= 6 &&
            map[nextX][nextY] === 0
          ) {
            map[nextX][nextY] = 1;
            DFS(nextX, nextY);
            map[nextX][nextY] = 0;
          }
        }
      }
    };
    map[0][0] = 1;
    DFS(0, 0);
    return count;
  };
}
